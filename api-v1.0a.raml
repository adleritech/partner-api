#%RAML 1.0
title: Liftago Public API
version: v1

baseUri: http://api.liftago.com/v1.0/partners/{partnerId}
annotationTypes:
  javaName:
    allowedTargets: [TypeDeclaration, Method]

description: |
  API for external integration.

/rides:
  post:
    description: Creates a new ride
    body:
      application/json:
        type: CreateRideRequest
    responses:
      201:
        body:
          application/json:
            type: RideInfo
        headers:
          Location:
            description: URI of created ride
            example: /rides/30dd67cc-b596-11e8-96f8-529269fb1459
      400:
        body:
          application/json:
            type: MalformedInputError
      404:
        body:
          application/json:
            type: PartnerNotFoundError
      409:
        body:
          application/json:
            type: DuplicatedRideIdError


  /{rideId}:
    uriParameters:
          rideId:
            type: string
    get:
      description: Gets info about the ride
      responses:
        200:
          body:
            application/json:
              type: RideInfo

        404:
          body:
            application/json:
              type: RideNotFoundError
    /cancel:
      post:
        description: Cancels ride
        body:
          application/json:
            type: CancelRequest
        responses:
          204:
          400:
            body:
              application/json:
                type: MalformedInputError
          404:
            body:
              application/json:
               type: RideNotFoundError
          409:
            body:
              application/json:
               type: IncompatibleStateError
    /rating:
      put:
        description: Rates the ride
        body:
          application/json:
            type: Rating
        responses:
          204:
          400:
            body:
              application/json:
                type: MalformedInputError
          404:
            body:
              application/json:
               type: RideNotFoundError
          409:
            body:
              application/json:
               type: IncompatibleStateError

/nearbyDrivers:
  post:
    description: Returns list of nearby drivers
    body:
      application/json:
        type: NearbyDriversRequest

    responses:
      200:
        body:
          application/json:
            type: NearbyDrivers
      400:
        body:
          application/json:
            type: MalformedInputError
      404:
        body:
          application/json:
            type: PartnerNotFoundError

/priceEstimate:
  post:
    description: Returns unguaranteed price estimate for the requested route
    body:
      application/json:
        type: RouteInfo
    responses:
      200:
        body:
          application/json:
            type: PriceEstimateResponse
      400:
        body:
          application/json:
            type: UnsupportedLocationError
      404:
        body:
          application/json:
            type: PartnerNotFoundError

types:
  NearbyDriversRequest:
    type: object
    properties:
      position: Coordinates

  PriceEstimate:
    type: object
    properties:
      lower:
        type: number
        format: double
        description: Lower bound of the estimate
      upper:
        type: number
        format: double
        description: |
          Upper bound of the estimate. Final price may be higher in case
          of different route or in case of unexpectedly high fare.
      ccy: Currency

  PriceEstimateResponse:
    type: object
    properties:
      estimate: PriceEstimate

  RouteInfo:
    type: object
    properties:
      pickup: Coordinates
      destination: Coordinates

  Ride:
    type: object
    properties:
      pickup: GeoPoint
      destination?: GeoPoint
      passenger: Passenger
      id:
        type: string
        description: |
          Unique ID send by partner which will be used in reports
          and to detect duplicate POSTs
        pattern: "[a-zA-Z0-9-_]+"
        maxLength: 40

  CreateRideRequest:
    type: Ride
    properties:
      webHook?:
        type: object
        description: |
          If present, Liftago will send POST request to this URI, with given
          headers and body containing RideStatusChangedEvent on every relevant
          ride change.
        properties:
          url:
            type: URI
            description: URI to be called
          headers:
            type: Header[]
            maxItems: 10

  RideBill:
    type: object
    properties:
      amount:
        type: Money
        description: Total amount including tip

  RideInfo:
    type: Ride
    properties:
      status:
        enum:
          - PROCESSING
          - ACCEPTED
          - WAITING
          - ON_BOARD
          - COMPLETED
          - CANCELLED
          - REJECTED
        description: |
          - PROCESSING - ride is being processed, driver not found yet. Transitions to ACCEPTED, REJECTED or CANCELLED BY PASSENGER
          - ACCEPTED - driver found and selected. Transitions to WAITING or CANCELLED (either by DRIVER or PASSENGER)
          - WAITING - driver is waiting on pickup location. Transitions to ON_BOARD or CANCELLED (either by DRIVER or PASSENGER)
          - ON_BOARD - passenger on board. Transitions to COMPLETED
          - COMPLETED - ride finished
          - CANCELLED - ride cancelled
          - REJECTED - could not find taxi in time
      cancelledBy?:
        enum:
          - PASSENGER
          - DRIVER
      estimatedPrice?:
        type: Money
        description: |
          Estimate based on offered tariff and route. May differ
          from the final price due to route change or traffic situation.
          Will be present once the ride is ACCEPTED
      driver?:
        type: Driver
        description: Will be present once the ride is ACCEPTED
      car?:
        type: Car
        description: Will be present once the ride is ACCEPTED
      taxiPosition?:
        type: Coordinates
        description: |
          Last known taxi position.
          Will be available when the DRV starts comming for the PAS (can be null even if the ride is ACCEPTED)
      arrivalEstimateAt?:
        type: datetime
        description: |
          Estimate of the taxi arrival to the pickup point.
          Not updated in case of delay.
          (available when the ride is ACCEPTED)
      completedAt?:
        type: datetime
        description: When was the ride finished/cancelled
      bill?:
        type: RideBill
        description: Price, will be available once the ride is FINISHED
      links:
        type: object
        properties:
          self: URI
          rating: URI
          cancel: URI

  Rating:
    type: object
    properties:
      rating:
        type: integer
        minimum: 1
        maximum: 5
        description: Rating of the driver, 1 is the worst, 5 is the best
      comment: string

  URI: string

  Header:
    type: object
    properties:
      name: string
      value: string

  Money:
    type: object
    properties:
      amount: number
      ccy: Currency

  Currency:
    type: string
    description: ISO-4217 (EUR, CZK)

  Coordinates:
    type: object
    properties:
      lat:
        type: number
        format: double
      lon:
        type: number
        format: double

  GeoPoint:
    type: Coordinates
    properties:
      placeName:
        type: string
        description:  comma separated address parts, ie. Truhlářská 15, 110 00 Praha

  Passenger:
    type: object
    properties:
      name: string
      phoneNumber:
        type: string
        description:  Phone number with international prefix

  Driver:
    type: object
    properties:
      name: string
      phoneNumber?:
        type: string
        description: Phone number to driver (goes through exchange)
      image?: URI

  Car:
    type: object
    properties:
      color:
        enum: [BLACK, BLUE, BROWN, GREEN, ORANGE, PURPLE, RED, SILVER, WHITE, YELLOW]
      brand: string
      model: string
      licencePlate: string

  NearbyDriver:
    type: object
    properties:
      position:
        type: Coordinates

  NearbyDrivers:
    type: object
    properties:
      drivers: NearbyDriver[]

  WebHookEvent:
    type: object
    properties:
      eventId:
        type: string
        description: Unique event identifier
      eventType:
        enum:
          - status_changed
        description:
          status_changed - Ride status changed
          Clients have to ignore unknown eventTypes
      timestamp:
        type: datetime
        description: When the event occured.

  RideStatusChangedEvent:
    type: WebHookEvent
    properties:
      rideId: string
      status: string
      links:
        type: object
        properties:
          ride:
            type: URI
            description: URI of the ride

  CancelRequest:
    type: object
    properties:
      reason?:
        enum:
          - JUST_TRYING
          - HUGE_DELAY
          - CHANGE_OF_PLANS
          - OTHER
      comment?:
        type: string
        description: Text comment about cancallation reason

  Error:
    type: object
    properties:
      code: string
      message: string

  MalformedInputError:
    type: Error
    example: {"code": "malformed_json_request", "message": "Malformed json request"}

  RideNotFoundError:
    type: Error
    example: {"code":"ride_not_found", "message":"Ride '52b4f17d-cb60-41a5-a1c5-f901167e5bdc' does not exist"}

  PartnerNotFoundError:
    type: Error
    example: {"code":"partner_not_found", "message":"Partner 'UNKNOWN' does not exist"}

  DuplicatedRideIdError:
    type: Error
    example: {"code":"current_ride_exists", "message":"Ride '52b4f17d-cb60-41a5-a1c5-f901167e5bdc' already exists"}

  IncompatibleStateError:
    type: Error
    example: {"code":"incompatible_state", "message":"Ride '52b4f17d-cb60-41a5-a1c5-f901167e5bdc' is not in the state compatible with the requested action"}

  UnsupportedLocationError:
    type: Error
    example: {"code":"unsupported_location", "message":"Requested route is located in an unsupported area."}